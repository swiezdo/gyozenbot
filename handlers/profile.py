# /gyozenbot/handlers/profile.py
import sys
import os
import logging
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ miniapp_api –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ db –º–æ–¥—É–ª—è
sys.path.append('/root/miniapp_api')
from db import get_user

from config import GROUP_ID, TOPIC_ID, LEGENDS_TOPIC_FIRST_MESSAGE

router = Router()

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö miniapp_api
DB_PATH = "/root/miniapp_api/app.db"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

def _is_allowed_context(message: Message) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à—ë–Ω –ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ñ–∏–ª—è.
    """
    # –õ–° - –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    if message.chat.type == "private":
        logger.debug(f"–õ–° –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ñ–∏–ª—è")
        return False
    
    # –ì—Ä—É–ø–ø–∞/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞ ‚Äî —Ç–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞
    if message.chat.type in ("group", "supergroup"):
        if message.chat.id != GROUP_ID:
            logger.debug(f"–ß–∞—Ç {message.chat.id} –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–º {GROUP_ID}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–º—É - —Ä–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—É !–ø –≤–æ –≤—Å–µ—Ö —Ç–µ–º–∞—Ö –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã
        if message.is_topic_message:
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–º–µ {message.message_thread_id}, –∫–æ–º–∞–Ω–¥–∞ !–ø —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –≤–æ –≤—Å–µ—Ö —Ç–µ–º–∞—Ö")
            return True
        else:
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤ —Ç–µ–º–µ, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ")
            return True
    
    logger.debug(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —á–∞—Ç–∞: {message.chat.type}")
    return False

def _get_target_user_id(message: Message) -> int:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–µ–π –ø—Ä–æ—Ñ–∏–ª—å –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å.
    
    –õ–æ–≥–∏–∫–∞:
    1. –ï—Å–ª–∏ —ç—Ç–æ reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID —Ç–µ–º—ã (2673) ‚Üí –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
    2. –ï—Å–ª–∏ —ç—Ç–æ reply –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ —Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è  
    3. –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥–∞ !–ø ‚Üí –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
    """
    if message.reply_to_message:
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID —Ç–µ–º—ã - —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–º–µ
        if message.reply_to_message.message_id == LEGENDS_TOPIC_FIRST_MESSAGE:
            return message.from_user.id
        else:
            # –û—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ —Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            return message.reply_to_message.from_user.id
    else:
        # –ü—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
        return message.from_user.id

def _format_profile(profile_data: dict) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    if not profile_data:
        return "‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å
    if not profile_data.get('real_name') and not profile_data.get('psn_id'):
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    text = "üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    
    # –†–µ–∞–ª—å–Ω–æ–µ –∏–º—è
    if profile_data.get('real_name'):
        text += f"üìù <b>–ò–º—è:</b> {profile_data['real_name']}\n"
    
    # PSN ID
    if profile_data.get('psn_id'):
        text += f"üéÆ <b>PSN ID:</b> {profile_data['psn_id']}\n"
    
    # –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã
    platforms = profile_data.get('platforms', [])
    if platforms:
        text += f"üíª <b>–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã:</b> {', '.join(platforms)}\n"
    
    # –†–µ–∂–∏–º—ã –∏–≥—Ä—ã
    modes = profile_data.get('modes', [])
    if modes:
        text += f"üéØ <b>–†–µ–∂–∏–º—ã:</b> {', '.join(modes)}\n"
    
    # –¶–µ–ª–∏
    goals = profile_data.get('goals', [])
    if goals:
        text += f"üéØ <b>–¶–µ–ª–∏:</b> {', '.join(goals)}\n"
    
    # –°–ª–æ–∂–Ω–æ—Å—Ç–∏
    difficulties = profile_data.get('difficulties', [])
    if difficulties:
        text += f"‚ö° <b>–°–ª–æ–∂–Ω–æ—Å—Ç–∏:</b> {', '.join(difficulties)}\n"
    
    # –¢—Ä–æ—Ñ–µ–∏
    trophies = profile_data.get('trophies', [])
    if trophies:
        text += f"üèÜ <b>–¢—Ä–æ—Ñ–µ–∏:</b> {', '.join(trophies)}\n"
    
    return text

@router.message()
async def profile_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã !–ø –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message.text}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ !–ø
    if not message.text or message.text.strip() != "!–ø":
        logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ '{message.text}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π !–ø, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        return
    
    logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ !–ø –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if not _is_allowed_context(message):
        logger.warning(f"–ö–æ–º–∞–Ω–¥–∞ !–ø –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ –Ω–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (—á–∞—Ç: {message.chat.id}, —Ç–µ–º–∞: {message.message_thread_id})")
        return
    
    logger.info(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã !–ø –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        target_user_id = _get_target_user_id(message)
        logger.info(f"–¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –∫–æ–º–∞–Ω–¥—ã !–ø: {target_user_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –ë–î
        logger.info(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id} –∏–∑ –ë–î {DB_PATH}")
        profile_data = get_user(DB_PATH, target_user_id)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile_data}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        formatted_profile = _format_profile(profile_data)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
        await message.reply(formatted_profile, parse_mode="HTML")
        logger.info(f"–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã !–ø: {str(e)}", exc_info=True)
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}"
        await message.reply(error_msg)
